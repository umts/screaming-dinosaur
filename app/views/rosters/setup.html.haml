%h1 Setup Twilio for #{@roster.name}

%ol#twilio-instructions
  %li
    - if @roster.phone.present?
      = link_to "Configure #{formatted_phone(@roster.phone)}",
                'https://console.twilio.com/us1/develop/phone-numbers/manage/incoming'
    - else
      = link_to 'Add a phone number',
                'https://console.twilio.com/us1/develop/phone-numbers/manage/search'
  %li
    Under Voice and Fax:
    %ol
      %li
        Set the call webhook to an HTTP GET request to
        %tt= roster_twilio_call_url(@roster, format: :xml)
      - if @roster.fallback_user.present?
        %li
          Set the failure handler to a TwiML Bin containing
          .card.w-75
            .card-body
              %pre.m-0
                - xml = render template: 'twilio/call', formats: :xml,
                               locals: { user: @roster.fallback_user, fallback: true }
                = String.new(xml)
  %li
    Under Messaging:
    %ol
      %li
        Set the message webhook to an HTTP GET request to
        %tt= roster_twilio_text_url(@roster, format: :xml)
      - if @roster.fallback_user.present?
        %li
          Set the failure handler to a TwiML Bin containing
          .card.w-75
            .card-body
              %pre.m-0
                - xml = render template: 'twilio/text', formats: :xml,
                               locals: { user: @roster.fallback_user, body: '{{Body}}', fallback: true }
                = String.new(xml)
