%h1 Users in #{@roster.name}

- if @fallback.blank?
  .alert.alert-warning.pb-0
    %p No fallback user!
    %p= link_to 'Select a fallback user', edit_roster_path(@roster), class: 'alert-link'

.container-fluid.my-4
  .row
    .col-lg
      = link_to 'Add new user', new_roster_user_path
    .col-lg
      - if @active
        = link_to 'Inactive users', roster_users_path(active: false)
      - else
        = link_to 'Active users', roster_users_path
    .col-lg
      - if @other_users.present?
        = form_tag transfer_roster_users_path do
          = label_tag :id, 'Add user from another roster:', class: 'form-label'
          .input-group
            = select_tag :id,
                         options_from_collection_for_select(@other_users, :id, :last_name),
                         class: 'form-select form-select-sm'
            = submit_tag 'Add', class: 'btn btn-primary btn-sm'

%table.table
  %thead
    %tr
      %th Name
      %th SPIRE
      %th Email
      %th Phone
      %th
      %th
      %th
  %tbody
    - @users.each do |user|
      %tr
        %td
          = user.full_name
          - if user == @fallback
            (fallback)
        %td= user.spire
        %td= user.email
        %td= formatted_phone(user.phone)
        %td= link_to 'Edit', edit_roster_user_path(@roster, user)
        %td
          = form_for user, url: roster_user_path(@roster, user) do |f|
            - if user.active?
              = f.hidden_field :active, value: false
              - confirm = 'Deactivating user will delete all upcoming assignments.'
              = f.submit 'Deactivate', class: 'btn btn-warning', data: { confirm: }
            - else
              = f.hidden_field :active, value: true
              = f.submit 'Activate', class: 'btn btn-success'
        %td= button_to 'Destroy', roster_user_path(@roster, user), method: :delete, class: 'btn btn-danger'
